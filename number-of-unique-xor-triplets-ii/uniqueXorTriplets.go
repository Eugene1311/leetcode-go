package main

import "fmt"

func uniqueXorTriplets(nums []int) int {
	uniqueTriplets := [2048]bool{}

	uniqueDuplets := [2048]bool{}
	for i := 0; i < len(nums); i++ {
		for j := i; j < len(nums); j++ {
			uniqueDuplets[nums[j]^nums[i]] = true
		}
	}

	counter := 0
	for i, duplet := range uniqueDuplets {
		if duplet {
			for _, num := range nums {
				triplet := num ^ i
				if uniqueTriplets[triplet] {
					continue
				}
				uniqueTriplets[triplet] = true
				counter++
			}
		}
	}

	return counter
}

func main() {
	fmt.Println(uniqueXorTriplets([]int{916}))
	fmt.Println(uniqueXorTriplets([]int{1, 3}))
	fmt.Println(uniqueXorTriplets([]int{6, 7, 8, 9}))
	fmt.Println(uniqueXorTriplets([]int{420, 1073, 386, 496}))
	fmt.Println(uniqueXorTriplets([]int{503, 161, 1144, 279, 513}))
	fmt.Println(uniqueXorTriplets([]int{858, 294, 382, 1315, 224, 1400, 1093, 509, 719, 416, 471, 890, 131, 1467, 1340, 1290, 1293, 560, 1258, 1406, 883, 1213, 59, 178, 480, 788, 359, 54, 768,
		1410, 1054, 787, 908, 1491, 691, 747, 77, 197, 1305, 1143, 673, 705, 92, 84, 494, 685, 150, 361, 378, 830, 736, 230, 1159, 1455, 219, 573, 1153, 1447, 518, 1348, 287, 462, 329, 1040, 841, 132,
		321, 571, 1288, 616, 484, 1430, 691, 484, 1419, 279, 1487, 1471, 789, 61, 85, 1355, 1461, 1123, 6, 1136, 1336, 1097, 1148, 1384, 665, 858, 1425, 931, 120, 796, 1439, 232, 959, 988, 636, 1337,
		672, 1048, 340, 76, 318, 312, 1206, 1428, 244, 325, 1358, 525, 88, 243, 507, 227, 537, 554, 200, 862, 384, 390, 1459, 1189, 605, 674, 909, 1109, 1183, 1237, 273, 601, 271, 663, 187, 121, 1246, 59,
		35, 99, 62, 1288, 993, 30, 1475, 11, 627, 482, 895, 918, 425, 576, 667, 495, 705, 472, 280, 1430, 877, 1301, 814, 853, 129, 1191, 1213, 332, 380, 809, 1286, 394, 221, 1445, 889, 1082, 35, 264, 549,
		538, 611, 660, 356, 1204, 80, 1395, 249, 1053, 254, 691, 967, 1397, 1306, 1330, 401, 325, 485, 662, 76, 1452, 146, 921, 380, 829, 412, 37, 1180, 1287, 1020, 1161, 108, 799, 564, 1345, 941, 27,
		1111, 1307, 957, 1294, 435, 635, 851, 363, 575, 1461, 56, 357, 641, 1243, 1191, 1406, 809, 46, 1055, 339, 1069, 1086, 826, 1039, 679, 712, 275, 252, 1426, 1274, 35, 1087, 928, 908, 1498, 13, 832,
		124, 1323, 255, 208, 217, 1381, 1095, 97, 943, 1364, 1478, 1341, 802, 675, 676, 9, 849, 565, 1429, 1385, 1295, 302, 1094, 179, 228, 1093, 1013, 627, 1210, 593, 501, 1072, 1404, 259, 1117, 820,
		280, 1429, 707, 223, 1058, 577, 619, 340, 785, 886, 901, 958, 291, 904, 1107, 1160, 588, 334, 1440, 962, 710, 674, 432, 845, 1028, 198, 159, 128, 1307, 433, 619, 1127, 121, 398, 1165, 711, 930,
		392, 176, 505, 1313, 956, 125, 63, 1334, 1295, 1110, 1409, 930, 1125, 1283, 1109, 191, 1087, 1108, 537, 1011, 1392, 58, 79, 336, 956, 225, 494, 1325, 297, 783, 231, 1320, 329, 383, 1104, 1327,
		819, 1300, 563, 550, 215, 1195, 313, 1406, 1268, 519, 1308, 102, 987, 1407, 61, 980, 1462, 688, 878, 967, 393, 1290, 28, 603, 1429, 102, 138, 622, 159, 491, 252, 1253, 1006, 1410, 1094, 1400,
		519, 363, 153, 689, 422, 1338, 900, 1216, 437, 301, 1, 1369, 1033, 1270, 687, 1080, 1113, 530}))
	fmt.Println(uniqueXorTriplets([]int{49, 526, 63, 652, 598, 892, 631, 64, 298, 401, 392, 141, 1169, 1498, 501, 1294, 1195, 1258, 447, 608, 751, 1445, 290, 144, 66,
		213, 69, 1350, 769, 690, 566, 875, 22, 841, 1208, 728, 1027, 716, 1017, 740, 750, 17, 406, 671, 701, 162, 258, 231, 39, 1110, 1477, 145, 984, 1418, 1430, 200,
		1058, 1114, 833, 1252, 1281, 649, 1064, 908, 621, 779, 1159, 746, 736, 1351, 1058, 946, 1238, 1044, 924, 412, 1268, 1211, 205, 770, 1007, 480, 384, 1152, 116,
		397, 222, 1292, 75, 1486, 226, 1185, 634, 1377, 268, 734, 1487, 681, 1106, 1131, 638, 459, 451, 1439, 1331, 403, 1074, 1284, 780, 136, 630, 616, 743, 617,
		1242, 369, 11, 957, 765, 346, 132, 303, 1312, 1117, 129, 985, 129, 1146, 787, 1398, 306, 651, 249, 558, 841, 150, 1029, 859, 838, 354, 579, 585, 1397, 1129,
		1287, 1487, 484, 381, 1211, 576, 1104, 648, 1444, 870, 32, 1433, 153, 182, 416, 1440, 369, 1305, 893, 1119, 1458, 235, 228, 1000, 1323, 656, 187, 799, 1255,
		1319, 1318, 878, 1168, 352, 341, 98, 372, 875, 357, 284, 656, 1066, 1036, 1168, 495, 64, 1371, 1015, 1402, 1093, 1124, 195, 1033, 140, 616, 1134, 507, 1055,
		1414, 576, 1346, 600, 197, 832, 839, 1492, 974, 715, 61, 1138, 1244, 407, 871, 1127, 362, 430, 612, 137, 598, 1394, 1485, 1008, 1103, 1314, 145, 1342, 1279,
		1329, 1044, 84, 1407, 846, 695, 1391, 232, 389, 1178, 624, 1267, 908, 1048, 311, 252, 1219, 290, 310, 642, 1375, 620, 1061, 1231, 637, 246, 1096, 1069, 394,
		35, 1356, 446, 1019, 1186, 1110, 1462, 400, 14, 387, 239, 909, 1008, 382, 905, 996, 211, 961, 812, 471, 559, 455, 1317, 45, 1124, 277, 91, 733, 1161, 689, 598,
		1272, 392, 1393, 16, 319, 250, 617, 673, 1424, 898, 810, 821, 414, 1037, 1495, 537, 919, 1234, 942, 300, 241, 963, 1457, 778, 129, 451, 76, 1450, 1263, 1323,
		1220, 1164, 426, 409, 1109, 436, 1355, 519, 677, 1235, 713, 566, 376, 984, 513, 680, 655, 1476, 234, 1479, 1201, 303, 540, 1019, 853, 1248, 1047, 533, 1482,
		1292, 327, 1317, 626, 164, 475, 544, 1161, 919, 412, 150, 738, 188, 270, 1053, 155, 611, 705, 449, 1169, 854, 695, 667, 1019, 1434, 706, 1432, 1102, 854, 762,
		582, 692, 324, 633, 507, 627, 770, 913, 679, 107, 929, 634, 243, 175, 752, 937, 578, 1081, 446, 1442, 766, 653, 942, 490, 217, 438, 788, 113, 303, 839, 970,
		1450, 279, 379, 364, 341, 532, 227, 549, 217, 593, 1254, 775, 1313, 59, 575}))
}
